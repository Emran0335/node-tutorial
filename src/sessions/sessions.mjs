/*
01. What is sessions?
Ans: Sessions represent the duration of a user on a website. By default, HTTP is stateless. We do not know who is making requests to our server. So, we need to be able to track requests and know where they are coming from. One common usage of sessions is to manage user authentication. Sessions are created on the server by generating an object with a session ID. When an HTTP request is sent to the server from the web browser, the response can return with instructions to set a cookie with the session ID so that it can be saved in the browser. This allows the browser to send the cookie on subsequent requests to the server. The server can then parse the cookie from text to json and then verify the session ID sent from the client and determine who the request was sent from. Whenever the browser sends the cookies on each request, the server can look up which user pertains to the session as the server maintains a mapping of each session ID to the user. We have to use express-sessions library.

If we modify the session data object, it will never create new session ID. Otherwise it will be very difficult to track the user if it regenerates session ID in each time we make the request to the server. So this is why we need to modify the session data object. When we modify the session data object, Express session will create a cookie or it will set the cookie and then that cookie will be sent back to the web browser or the client side(Thunder client). The client side or the web browser of the user will store that cookie and then on subsequent requests or future requests that cookie will be sent to the server assuming it has not been 
*/